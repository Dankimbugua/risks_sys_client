{"ast":null,"code":"var _jsxFileName = \"/home/nathy/React_Apps/demo_1/src/pages/Auth/Forgot.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-responsive-modal';\nimport { connect } from \"react-redux\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport { submitForgotemailClient, submitForgotemailTrader } from '../redux/Action';\n\nclass Forgot extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitEmailTrader = async event => {\n      console.log('trader....'); // event.preventDefault()\n      // await this.props.submitForgotemailTrader(this.state.email)\n    };\n\n    this.submitEmailClient = async event => {\n      console.log('client....'); // event.preventDefault()\n      // await this.props.submitForgotemailClient(this.state.email)\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: ''\n    };\n    this.validator = new SimpleReactValidator();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      open: this.props.open,\n      onClose: this.props.close,\n      center: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"forgot_password\",\n      onSubmit: this.props.type === 'trader' ? this.submitEmailTrader : this.submitEmailClient,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }\n    }, \"Enter your Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      className: \"form-control\",\n      value: this.state.email,\n      onChange: this.changeHandler,\n      onBlur: () => this.validator.showMessageFor('email'),\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    }), this.validator.message('email', this.state.email, 'required|email')), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }), this.validator.allValid() ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }, \"Submit \") : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }\n    }, \"Submit \")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    fetching: state.Auth.isFetching\n  };\n};\n\nconst mapDispatchToProps = {\n  submitForgotemailClient,\n  submitForgotemailTrader\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Forgot);","map":{"version":3,"sources":["/home/nathy/React_Apps/demo_1/src/pages/Auth/Forgot.js"],"names":["React","Component","Modal","connect","SimpleReactValidator","submitForgotemailClient","submitForgotemailTrader","Forgot","constructor","props","submitEmailTrader","event","console","log","submitEmailClient","changeHandler","setState","target","name","value","state","email","validator","render","open","close","type","showMessageFor","message","allValid","mapStateToProps","fetching","Auth","isFetching","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Modal from 'react-responsive-modal';\nimport { connect } from \"react-redux\"\nimport SimpleReactValidator from 'simple-react-validator';\nimport {submitForgotemailClient,submitForgotemailTrader} from '../redux/Action'\n\n class Forgot extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            email:'',\n        }\n      \n        this.validator = new SimpleReactValidator()\n    }\n\n    submitEmailTrader =async(event) => {\n        console.log('trader....')\n\n        // event.preventDefault()\n\n        // await this.props.submitForgotemailTrader(this.state.email)\n    }\n    submitEmailClient =async(event) => {\n        console.log('client....')\n        // event.preventDefault()\n\n        // await this.props.submitForgotemailClient(this.state.email)\n    }\n    changeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      }\n  render() {\n    return (\n        <Modal open={this.props.open} onClose={this.props.close}  center>\n    \n        <form className=\"forgot_password\" \n        onSubmit={this.props.type === 'trader' ?this.submitEmailTrader:this.submitEmailClient}\n                    noValidate>\n                  <h3>Forgot Password</h3>\n  \n                  <div className=\"form-group\">\n                      <label>Enter your Email address</label>\n                      <input \n                      name=\"email\"\n                      type=\"email\"\n                       className=\"form-control\"\n                       value={this.state.email}\n                       onChange={this.changeHandler}\n                       onBlur={()=>this.validator.showMessageFor('email')}\n                        placeholder=\"Enter email\" />\n\n                  {this.validator.message('email', this.state.email, 'required|email')}\n                  </div>\n  \n                  <br/>\n  \n                 { this.validator.allValid()?\n                      <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit </button>\n                      :\n                      <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled>Submit </button>\n                 \n                 }\n                 \n              </form>\n              \n  </Modal>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n      fetching:state.Auth.isFetching,\n    }\n}\nconst mapDispatchToProps={\n  \n    submitForgotemailClient,\n    submitForgotemailTrader\n   \n  \n\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Forgot)"]},"metadata":{},"sourceType":"module"}