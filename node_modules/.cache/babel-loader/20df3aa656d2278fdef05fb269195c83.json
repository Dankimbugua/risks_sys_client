{"ast":null,"code":"import { combineReducers } from 'redux'; // import update from 'immutability-helper'\n\nconst AuthinitialState = {\n  loggedIn: false,\n  token: null,\n  isFetching: false,\n  hasError: false,\n  errorMessage: '',\n  user: null\n};\nconst UsersinitialState = {\n  users: null\n};\nconst ListingsinitialState = {\n  listings: null\n};\nconst PaymentsinitialState = {\n  payments: null,\n  service_totals: null,\n  daily_totals: null\n};\nconst initialstate = {\n  isFetching: false,\n  hasError: false,\n  errorMessage: ''\n};\n\nconst stateReducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case 'STATE_FETCHING':\n      return { ...state,\n        isFetching: true\n      };\n\n    case 'STATE_NOT_FETCHING':\n      return { ...state,\n        isFetching: false\n      };\n\n    case 'STATE_HAS_ERROR':\n      const {\n        error\n      } = action;\n      return { ...state,\n        hasError: true,\n        errorMessage: error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst usersReducer = (state = UsersinitialState, action) => {\n  switch (action.type) {\n    // case 'FETCHING_USERS':\n    //     return  {\n    //       ...state,\n    //       isFetching:true\n    //     }\n    case 'FETCHED_USERS':\n      // const newState\n      const {\n        users\n      } = action;\n      return { ...state,\n        users // isFetching:false\n\n      };\n    // case'FETCH_USERS_ERROR':\n    //     const { error } = action\n    //     return{...state,hasError:true,errorMessage:error}\n\n    default:\n      return state;\n  }\n};\n\nconst listingsReducer = (state = ListingsinitialState, action) => {\n  switch (action.type) {\n    // case 'FETCHING_LISTINGS':\n    //     return {\n    //       ...state,\n    //       isFetching:true\n    //     }\n    case 'FETCHED_LISTINGS':\n      const {\n        listings\n      } = action;\n      return { ...state,\n        listings\n      };\n    // case'FETCH_LISTINGS_ERROR':\n    //     const { error } = action\n    //     return{...state,hasError:true,errorMessage:error}\n\n    default:\n      return state;\n  }\n};\n\nconst paymentsreducer = (state = PaymentsinitialState, action) => {\n  switch (action.type) {\n    // case 'FETCHING_PAYMENTS':\n    //     return {\n    //       ...state,\n    //       isFetching:true\n    //     }\n    case 'FETCHED_PAYMENTS':\n      const {\n        payments\n      } = action;\n      return { ...state,\n        payments\n      };\n\n    case 'FETCH_DAILY_TOTAL':\n      const {\n        daily_totals\n      } = action;\n      return { ...state,\n        daily_totals\n      };\n\n    case 'FETCH_SERVICE_TOTALS':\n      const {\n        service_totals\n      } = action;\n      return { ...state,\n        service_totals\n      };\n    // case 'FETCHING_PAYMENTS_ERROR':\n    //     const { error } = action\n    //     return{...state,hasError:true,errorMessage:error}\n\n    default:\n      return state;\n  }\n};\n\nconst Auth = (state = AuthinitialState, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      {\n        return { ...state,\n          isFetching: true\n        };\n      }\n\n    case 'LOGIN_FINISHED':\n      {\n        const {\n          user,\n          token\n        } = action;\n        return { ...state,\n          user,\n          token,\n          loggedIn: true,\n          isFetching: false\n        };\n      }\n\n    case 'LOGIN_ERROR':\n      {\n        const {\n          error\n        } = action;\n        return { ...state,\n          isFetching: false,\n          loggedIn: false,\n          hasError: true,\n          token: null,\n          user: null,\n          errorMessage: error\n        };\n      }\n\n    case 'LOGOUT_START':\n      {\n        return { ...state,\n          isFetching: true\n        };\n      }\n\n    case 'LOGOUT_FINISHED':\n      {\n        return { ...state,\n          loggedIn: false,\n          isFetching: false,\n          hasError: false,\n          errorMessage: '',\n          token: null,\n          user: null\n        };\n      }\n\n    case 'LOGOUT_ERROR':\n      {\n        const {\n          error\n        } = action;\n        return { ...state,\n          isFetching: false,\n          loggedIn: true,\n          hasError: true,\n          errorMessage: error\n        };\n      }\n\n    case 'REGISTER_START':\n      {\n        return { ...state,\n          isFetching: true\n        };\n      }\n\n    case 'REGISTER_FINISHED':\n      {\n        const {\n          user,\n          token\n        } = action;\n        return { ...state,\n          user,\n          token,\n          loggedIn: true,\n          isFetching: false\n        };\n      }\n\n    case 'REGISTER_ERROR':\n      {\n        const {\n          error\n        } = action;\n        return { ...state,\n          isFetching: false,\n          loggedIn: false,\n          hasError: true,\n          token: null,\n          user: null,\n          errorMessage: error\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nconst Rootreducer = combineReducers({\n  stateReducer,\n  usersReducer,\n  listingsReducer,\n  paymentsreducer,\n  Auth\n});\nexport default Rootreducer;","map":{"version":3,"sources":["/home/nathy/React_Apps/demo_1/src/pages/redux/Reducer.js"],"names":["combineReducers","AuthinitialState","loggedIn","token","isFetching","hasError","errorMessage","user","UsersinitialState","users","ListingsinitialState","listings","PaymentsinitialState","payments","service_totals","daily_totals","initialstate","stateReducer","state","action","type","error","usersReducer","listingsReducer","paymentsreducer","Auth","Rootreducer"],"mappings":"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","sourcesContent":["import {combineReducers} from 'redux'\n// import update from 'immutability-helper'\n\nconst AuthinitialState = {\n    loggedIn: false,\n    token:null,\n    isFetching:false,\n    hasError: false,\n    errorMessage: '',\n    user: null\n  }\nconst UsersinitialState={\n    users:null\n}\nconst ListingsinitialState={\n   listings:null\n}\n\nconst PaymentsinitialState={\n  payments:null,\n  service_totals:null,\n  daily_totals:null\n}\nconst initialstate={\n  isFetching:false,\n  hasError:false,\n  errorMessage:''\n\n}\n\nconst stateReducer=(state=initialstate,action)=>{\n   switch(action.type){\n     case 'STATE_FETCHING':\n       return{\n         ...state,isFetching:true\n       }\n       case 'STATE_NOT_FETCHING':\n         return {\n           ...state,\n           isFetching:false\n         }\n         case 'STATE_HAS_ERROR':\n            const { error } = action\n            return{\n              ...state,hasError:true,errorMessage:error\n            }\n\n            default: \n            return state\n            \n      \n   }\n}\nconst usersReducer=(state=UsersinitialState,action)=>{\n    switch(action.type)\n    {\n        // case 'FETCHING_USERS':\n        //     return  {\n        //       ...state,\n        //       isFetching:true\n        //     }\n        case 'FETCHED_USERS':\n          // const newState\n          const {users}=action\n          return {...state,\n                    users\n                    // isFetching:false\n                  }\n        // case'FETCH_USERS_ERROR':\n        //     const { error } = action\n        //     return{...state,hasError:true,errorMessage:error}\n      \n        default: \n            return state\n            \n\n              \n    }\n   \n}\nconst listingsReducer=(state=ListingsinitialState,action)=>{\n    switch(action.type)\n    {\n      // case 'FETCHING_LISTINGS':\n      //     return {\n      //       ...state,\n      //       isFetching:true\n      //     }\n        case 'FETCHED_LISTINGS':\n          const {listings}=action\n            return {...state,\n                    listings\n                  }\n        // case'FETCH_LISTINGS_ERROR':\n        //     const { error } = action\n        //     return{...state,hasError:true,errorMessage:error}\n        default: \n            return state\n            \n\n              \n    }\n   \n}\n\nconst paymentsreducer =(state=PaymentsinitialState,action)=>{\n\n    switch(action.type){\n      // case 'FETCHING_PAYMENTS':\n      //     return {\n      //       ...state,\n      //       isFetching:true\n      //     }\n      case 'FETCHED_PAYMENTS':\n        const {payments}=action\n        return {...state,payments}\n\n        case 'FETCH_DAILY_TOTAL':\n          const{daily_totals}=action\n          return{...state,daily_totals}\n\n        case 'FETCH_SERVICE_TOTALS':\n          const{service_totals}=action\n          return {...state,service_totals}\n    \n      // case 'FETCHING_PAYMENTS_ERROR':\n      //     const { error } = action\n\n      //     return{...state,hasError:true,errorMessage:error}\n\n          default:\n\n          return state\n        }\n}\n\nconst Auth=(state=AuthinitialState,action)=>{\n    switch(action.type)\n    {\n        case 'LOGIN_START': {\n            return {\n              ...state,\n              isFetching: true\n            };\n          }\n          case 'LOGIN_FINISHED': {\n            const { user,token} = action\n            return {\n              ...state,\n              user,\n              token,\n              loggedIn: true,\n              isFetching: false\n            };\n          }\n          case 'LOGIN_ERROR': {\n            const { error } = action\n            return {\n              ...state,\n              isFetching: false,\n              loggedIn: false,\n              hasError: true,\n              token:null,\n              user: null,\n              errorMessage: error\n            };\n          }\n          case 'LOGOUT_START': {\n            return {\n              ...state,\n              isFetching: true\n            }\n          }\n          case 'LOGOUT_FINISHED': {\n            return {\n              ...state,\n              loggedIn: false,\n              isFetching: false,\n              hasError: false,\n              errorMessage: '',\n              token:null,\n              user: null\n            }\n          }\n          case 'LOGOUT_ERROR': {\n            const { error } = action\n            return {\n              ...state,\n              isFetching: false,\n              loggedIn:true,\n              hasError: true,\n              errorMessage: error,\n              \n            }\n          }\n          case 'REGISTER_START': {\n            return {\n              ...state,\n              isFetching: true\n            };\n          }\n          case 'REGISTER_FINISHED': {\n            const { user,token} = action\n            return {\n              ...state,\n              user,\n              token,\n              loggedIn: true,\n              isFetching: false\n            };\n          }\n          case 'REGISTER_ERROR': {\n            const { error } = action\n            return {\n              ...state,\n              isFetching: false,\n              loggedIn: false,\n              hasError: true,\n              token:null,\n              user: null,\n              errorMessage: error\n            };\n          }\n         \n          default: {\n            return state\n          }\n    \n    }\n}\n\nconst Rootreducer= combineReducers({\n  stateReducer,\n  usersReducer,\n  listingsReducer,\n  paymentsreducer,\n      Auth\n\n})\n\nexport default Rootreducer"]},"metadata":{},"sourceType":"module"}