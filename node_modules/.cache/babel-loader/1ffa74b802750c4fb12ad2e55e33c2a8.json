{"ast":null,"code":"import { combineReducers } from 'redux'; // import update from 'immutability-helper'\n\nconst AuthinitialState = {\n  loggedIn: false,\n  token: null,\n  isFetching: false,\n  hasError: false,\n  errorMessage: '',\n  user: null,\n  usertype: ''\n};\nconst initialstate = {\n  isFetching: false,\n  hasError: false,\n  errorMessage: ''\n};\n\nconst stateReducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case 'STATE_FETCHING':\n      return { ...state,\n        isFetching: true\n      };\n\n    case 'STATE_NOT_FETCHING':\n      return { ...state,\n        isFetching: false\n      };\n\n    case 'STATE_HAS_ERROR':\n      const {\n        error\n      } = action;\n      return { ...state,\n        hasError: true,\n        errorMessage: error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Auth = (state = AuthinitialState, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      {\n        return { ...state,\n          isFetching: true\n        };\n      }\n\n    case 'LOGIN_FINISHED':\n      {\n        const {\n          user,\n          token,\n          usertype\n        } = action;\n        return { ...state,\n          user,\n          token,\n          usertype: usertype,\n          loggedIn: true,\n          isFetching: false\n        };\n      }\n\n    case 'LOGIN_ERROR':\n      {\n        const {\n          error\n        } = action;\n        return { ...state,\n          isFetching: false,\n          loggedIn: false,\n          hasError: true,\n          token: null,\n          user: null,\n          errorMessage: error\n        };\n      }\n\n    case 'LOGOUT_START':\n      {\n        return { ...state,\n          isFetching: true\n        };\n      }\n\n    case 'LOGOUT_FINISHED':\n      {\n        return { ...state,\n          loggedIn: false,\n          isFetching: false,\n          hasError: false,\n          errorMessage: '',\n          token: null,\n          user: null\n        };\n      }\n\n    case 'LOGOUT_ERROR':\n      {\n        const {\n          error\n        } = action;\n        return { ...state,\n          isFetching: false,\n          loggedIn: true,\n          hasError: true,\n          errorMessage: error\n        };\n      }\n\n    case 'REGISTER_START':\n      {\n        return { ...state,\n          isFetching: true\n        };\n      }\n\n    case 'REGISTER_FINISHED':\n      {\n        const {\n          user,\n          token,\n          usertype\n        } = action;\n        return { ...state,\n          user,\n          token,\n          usertype: usertype,\n          loggedIn: true,\n          isFetching: false\n        };\n      }\n\n    case 'REGISTER_ERROR':\n      {\n        const {\n          error\n        } = action;\n        return { ...state,\n          isFetching: false,\n          loggedIn: false,\n          hasError: true,\n          token: null,\n          user: null,\n          errorMessage: error\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nconst Rootreducer = combineReducers({\n  stateReducer,\n  Auth\n});\nexport default Rootreducer;","map":{"version":3,"sources":["/home/nathy/React_Apps/demo_1/src/pages/redux/Reducer.js"],"names":["combineReducers","AuthinitialState","loggedIn","token","isFetching","hasError","errorMessage","user","usertype","initialstate","stateReducer","state","action","type","error","Auth","Rootreducer"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B,C,CACA;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,QAAQ,EAAE,KADW;AAErBC,EAAAA,KAAK,EAAC,IAFe;AAGrBC,EAAAA,UAAU,EAAC,KAHU;AAIrBC,EAAAA,QAAQ,EAAE,KAJW;AAKrBC,EAAAA,YAAY,EAAE,EALO;AAMrBC,EAAAA,IAAI,EAAE,IANe;AAOrBC,EAAAA,QAAQ,EAAC;AAPY,CAAzB;AAUA,MAAMC,YAAY,GAAC;AACjBL,EAAAA,UAAU,EAAC,KADM;AAEjBC,EAAAA,QAAQ,EAAC,KAFQ;AAGjBC,EAAAA,YAAY,EAAC;AAHI,CAAnB;;AAOA,MAAMI,YAAY,GAAC,CAACC,KAAK,GAACF,YAAP,EAAoBG,MAApB,KAA6B;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,gBAAL;AACE,aAAM,EACJ,GAAGF,KADC;AACKP,QAAAA,UAAU,EAAC;AADhB,OAAN;;AAGA,SAAK,oBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELP,QAAAA,UAAU,EAAC;AAFN,OAAP;;AAIA,SAAK,iBAAL;AACG,YAAM;AAAEU,QAAAA;AAAF,UAAYF,MAAlB;AACA,aAAM,EACJ,GAAGD,KADC;AACKN,QAAAA,QAAQ,EAAC,IADd;AACmBC,QAAAA,YAAY,EAACQ;AADhC,OAAN;;AAIA;AACA,aAAOH,KAAP;AAjBT;AAqBF,CAtBD;;AA0BA,MAAMI,IAAI,GAAC,CAACJ,KAAK,GAACV,gBAAP,EAAwBW,MAAxB,KAAiC;AACxC,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,aAAL;AAAoB;AAChB,eAAO,EACL,GAAGF,KADE;AAELP,UAAAA,UAAU,EAAE;AAFP,SAAP;AAID;;AACD,SAAK,gBAAL;AAAuB;AACrB,cAAM;AAAEG,UAAAA,IAAF;AAAOJ,UAAAA,KAAP;AAAaK,UAAAA;AAAb,YAAyBI,MAA/B;AACA,eAAO,EACL,GAAGD,KADE;AAELJ,UAAAA,IAFK;AAGLJ,UAAAA,KAHK;AAILK,UAAAA,QAAQ,EAACA,QAJJ;AAKLN,UAAAA,QAAQ,EAAE,IALL;AAMLE,UAAAA,UAAU,EAAE;AANP,SAAP;AAQD;;AACD,SAAK,aAAL;AAAoB;AAClB,cAAM;AAAEU,UAAAA;AAAF,YAAYF,MAAlB;AACA,eAAO,EACL,GAAGD,KADE;AAELP,UAAAA,UAAU,EAAE,KAFP;AAGLF,UAAAA,QAAQ,EAAE,KAHL;AAILG,UAAAA,QAAQ,EAAE,IAJL;AAKLF,UAAAA,KAAK,EAAC,IALD;AAMLI,UAAAA,IAAI,EAAE,IAND;AAOLD,UAAAA,YAAY,EAAEQ;AAPT,SAAP;AASD;;AACD,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGH,KADE;AAELP,UAAAA,UAAU,EAAE;AAFP,SAAP;AAID;;AACD,SAAK,iBAAL;AAAwB;AACtB,eAAO,EACL,GAAGO,KADE;AAELT,UAAAA,QAAQ,EAAE,KAFL;AAGLE,UAAAA,UAAU,EAAE,KAHP;AAILC,UAAAA,QAAQ,EAAE,KAJL;AAKLC,UAAAA,YAAY,EAAE,EALT;AAMLH,UAAAA,KAAK,EAAC,IAND;AAOLI,UAAAA,IAAI,EAAE;AAPD,SAAP;AASD;;AACD,SAAK,cAAL;AAAqB;AACnB,cAAM;AAAEO,UAAAA;AAAF,YAAYF,MAAlB;AACA,eAAO,EACL,GAAGD,KADE;AAELP,UAAAA,UAAU,EAAE,KAFP;AAGLF,UAAAA,QAAQ,EAAC,IAHJ;AAILG,UAAAA,QAAQ,EAAE,IAJL;AAKLC,UAAAA,YAAY,EAAEQ;AALT,SAAP;AAQD;;AACD,SAAK,gBAAL;AAAuB;AACrB,eAAO,EACL,GAAGH,KADE;AAELP,UAAAA,UAAU,EAAE;AAFP,SAAP;AAID;;AACD,SAAK,mBAAL;AAA0B;AACxB,cAAM;AAAEG,UAAAA,IAAF;AAAOJ,UAAAA,KAAP;AAAaK,UAAAA;AAAb,YAAyBI,MAA/B;AACA,eAAO,EACL,GAAGD,KADE;AAELJ,UAAAA,IAFK;AAGLJ,UAAAA,KAHK;AAILK,UAAAA,QAAQ,EAACA,QAJJ;AAKLN,UAAAA,QAAQ,EAAE,IALL;AAMLE,UAAAA,UAAU,EAAE;AANP,SAAP;AAQD;;AACD,SAAK,gBAAL;AAAuB;AACrB,cAAM;AAAEU,UAAAA;AAAF,YAAYF,MAAlB;AACA,eAAO,EACL,GAAGD,KADE;AAELP,UAAAA,UAAU,EAAE,KAFP;AAGLF,UAAAA,QAAQ,EAAE,KAHL;AAILG,UAAAA,QAAQ,EAAE,IAJL;AAKLF,UAAAA,KAAK,EAAC,IALD;AAMLI,UAAAA,IAAI,EAAE,IAND;AAOLD,UAAAA,YAAY,EAAEQ;AAPT,SAAP;AASD;;AAED;AAAS;AACP,eAAOH,KAAP;AACD;AA3FP;AA8FH,CA/FD;;AAiGA,MAAMK,WAAW,GAAEhB,eAAe,CAAC;AACjCU,EAAAA,YADiC;AAG7BK,EAAAA;AAH6B,CAAD,CAAlC;AAOA,eAAeC,WAAf","sourcesContent":["import {combineReducers} from 'redux'\n// import update from 'immutability-helper'\n\nconst AuthinitialState = {\n    loggedIn: false,\n    token:null,\n    isFetching:false,\n    hasError: false,\n    errorMessage: '',\n    user: null,\n    usertype:''\n  }\n\nconst initialstate={\n  isFetching:false,\n  hasError:false,\n  errorMessage:''\n\n}\n\nconst stateReducer=(state=initialstate,action)=>{\n   switch(action.type){\n     case 'STATE_FETCHING':\n       return{\n         ...state,isFetching:true\n       }\n       case 'STATE_NOT_FETCHING':\n         return {\n           ...state,\n           isFetching:false\n         }\n         case 'STATE_HAS_ERROR':\n            const { error } = action\n            return{\n              ...state,hasError:true,errorMessage:error\n            }\n\n            default: \n            return state\n            \n      \n   }\n}\n\n\n\nconst Auth=(state=AuthinitialState,action)=>{\n    switch(action.type)\n    {\n        case 'LOGIN_START': {\n            return {\n              ...state,\n              isFetching: true\n            };\n          }\n          case 'LOGIN_FINISHED': {\n            const { user,token,usertype} = action\n            return {\n              ...state,\n              user,\n              token,\n              usertype:usertype,\n              loggedIn: true,\n              isFetching: false\n            };\n          }\n          case 'LOGIN_ERROR': {\n            const { error } = action\n            return {\n              ...state,\n              isFetching: false,\n              loggedIn: false,\n              hasError: true,\n              token:null,\n              user: null,\n              errorMessage: error\n            };\n          }\n          case 'LOGOUT_START': {\n            return {\n              ...state,\n              isFetching: true\n            }\n          }\n          case 'LOGOUT_FINISHED': {\n            return {\n              ...state,\n              loggedIn: false,\n              isFetching: false,\n              hasError: false,\n              errorMessage: '',\n              token:null,\n              user: null\n            }\n          }\n          case 'LOGOUT_ERROR': {\n            const { error } = action\n            return {\n              ...state,\n              isFetching: false,\n              loggedIn:true,\n              hasError: true,\n              errorMessage: error,\n              \n            }\n          }\n          case 'REGISTER_START': {\n            return {\n              ...state,\n              isFetching: true\n            };\n          }\n          case 'REGISTER_FINISHED': {\n            const { user,token,usertype} = action\n            return {\n              ...state,\n              user,\n              token,\n              usertype:usertype,\n              loggedIn: true,\n              isFetching: false\n            };\n          }\n          case 'REGISTER_ERROR': {\n            const { error } = action\n            return {\n              ...state,\n              isFetching: false,\n              loggedIn: false,\n              hasError: true,\n              token:null,\n              user: null,\n              errorMessage: error\n            };\n          }\n         \n          default: {\n            return state\n          }\n    \n    }\n}\n\nconst Rootreducer= combineReducers({\n  stateReducer,\n \n      Auth\n\n})\n\nexport default Rootreducer"]},"metadata":{},"sourceType":"module"}