{"ast":null,"code":"var _jsxFileName = \"/home/nathy/React_Apps/demo_1/src/pages/trader/Trades/Reports.js\";\nimport React, { Component } from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass Reports extends Component {\n  constructor() {\n    super();\n    this.state = {\n      signals: null,\n      error: null\n    };\n  }\n\n  async componentDidMount() {\n    await axios.get('http://risk-api.sortika.com/api/v1/trade-requests/requestor/' + this.props.AuthUser.id, {}).then(res => {\n      console.log(res);\n      this.setState({\n        signals: res.data.data\n      });\n    }).catch(err => {\n      console.log(err.response.data);\n      this.setState({\n        error: err.response.data\n      });\n    });\n  }\n\n  render() {\n    const columns = [{\n      name: \"asset\",\n      label: \"Asset\",\n      options: {\n        filter: true,\n        sort: true\n      }\n    }, {\n      name: \"entry_price\",\n      label: \"Entry Price\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      name: \"take_profit\",\n      label: \"Take Profit\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      name: \"stop_loss\",\n      label: \"Stop Loss\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      name: \"take_profit\",\n      label: \"Take Profit\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      name: \"signal_type\",\n      label: \"Signal Type\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      name: \"time_frame\",\n      label: \"Time Frame\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      name: \"status_text\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      name: \"issue_time\",\n      label: \"Issue Time\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      name: \"lots_allocated\",\n      label: \"Lots Allocated\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      name: \"risk\",\n      label: \"Risk\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      name: \"volume\",\n      label: \"Volume\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      name: \"profit\",\n      label: \"Profit\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }];\n    const file_name = Date.now() + '.csv';\n    const options = {\n      filterType: 'checkbox',\n      downloadOptions: {\n        filename: file_name,\n        separator: ',',\n        filterOptions: {\n          useDisplayedRowsOnly: true,\n          useDisplayedColumnsOnly: true\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, this.state.signals ? /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Your Signal Reports\",\n      data: this.state.signals,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 22\n      }\n    }, \"Loading .....\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    AuthUser: state.Auth.user,\n    Token: state.Auth.token,\n    bal: state.Auth.trader_acc_balance\n  };\n};\n\nexport default connect(mapStateToProps)(Reports);","map":{"version":3,"sources":["/home/nathy/React_Apps/demo_1/src/pages/trader/Trades/Reports.js"],"names":["React","Component","MUIDataTable","axios","connect","Reports","constructor","state","signals","error","componentDidMount","get","props","AuthUser","id","then","res","console","log","setState","data","catch","err","response","render","columns","name","label","options","filter","sort","file_name","Date","now","filterType","downloadOptions","filename","separator","filterOptions","useDisplayedRowsOnly","useDisplayedColumnsOnly","mapStateToProps","Auth","user","Token","token","bal","trader_acc_balance"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MUIDataTable from \"mui-datatables\";\nimport axios from 'axios'\nimport {connect} from 'react-redux'\n\nclass Reports extends Component {\n    constructor(){\n        super()\n        this.state={\n            signals:null,\n            error:null\n        }\n    }\n\n    async componentDidMount(){\n\n        await axios.get('http://risk-api.sortika.com/api/v1/trade-requests/requestor/'+this.props.AuthUser.id,{\n\n        }).then((res)=>{\n            console.log(res)\n            this.setState({signals:res.data.data})\n        }).catch((err)=>{\n            console.log(err.response.data)\n            this.setState({error:err.response.data})\n        })\n    }\n    render() {\n\n        const columns = [\n            {\n             name: \"asset\",\n             label: \"Asset\",\n             options: {\n              filter: true,\n              sort: true,\n             }\n            },\n            {\n             name: \"entry_price\",\n             label: \"Entry Price\",\n             options: {\n              filter: true,\n              sort: false,\n             }\n            },\n            {\n             name: \"take_profit\",\n             label: \"Take Profit\",\n             options: {\n              filter: true,\n              sort: false,\n             }\n            },\n            {\n             name: \"stop_loss\",\n             label: \"Stop Loss\",\n             options: {\n              filter: true,\n              sort: false,\n             }\n            },\n            {\n             name: \"take_profit\",\n             label: \"Take Profit\",\n             options: {\n              filter: true,\n              sort: false,\n             }\n            },\n            {\n             name: \"signal_type\",\n             label: \"Signal Type\",\n             options: {\n              filter: true,\n              sort: false,\n             }\n            },\n            {\n             name: \"time_frame\",\n             label: \"Time Frame\",\n             options: {\n              filter: true,\n              sort: false,\n             }\n            },\n            {\n             name: \"status_text\",\n             label: \"Status\",\n             options: {\n              filter: true,\n              sort: false,\n             }\n            },\n            {\n             name: \"issue_time\",\n             label: \"Issue Time\",\n             options: {\n              filter: true,\n              sort: false,\n             }\n            },\n            {\n             name: \"lots_allocated\",\n             label: \"Lots Allocated\",\n             options: {\n              filter: true,\n              sort: false,\n             }\n            },\n            {\n             name: \"risk\",\n             label: \"Risk\",\n             options: {\n              filter: true,\n              sort: false,\n             }\n            },\n            {\n             name: \"volume\",\n             label: \"Volume\",\n             options: {\n              filter: true,\n              sort: false,\n             }\n            },\n            {\n             name: \"profit\",\n             label: \"Profit\",\n             options: {\n              filter: true,\n              sort: false,\n             }\n            },\n           ];\n           const file_name=Date.now()+'.csv'\nconst options = {\n  filterType: 'checkbox',\n  downloadOptions:{\n    filename:file_name,\n    separator:',',\n    filterOptions:{\n      useDisplayedRowsOnly:true,\n      useDisplayedColumnsOnly:true\n    }\n  }\n};\n        return (\n            <div>\n            { this.state.signals ?  <MUIDataTable\n                title={\"Your Signal Reports\"}\n                data={this.state.signals}\n                columns={columns}\n                options={options}\n                /> : <h2>Loading .....</h2>}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n      AuthUser:state.Auth.user, \n      Token:state.Auth.token ,\n      bal:state.Auth.trader_acc_balance\n  \n    }\n  }\n\n  export default connect(mapStateToProps)(Reports)"]},"metadata":{},"sourceType":"module"}