{"ast":null,"code":"var _jsxFileName = \"/home/nathy/React_Apps/demo_1/src/pages/backend/routes.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport ClientRoutes from '../routes/ClientRoutes';\nimport TraderRoutes from '../routes/TraderRoutes'; //trader routes\n// const Buttons = lazy(() => import('../app/basic-ui/Buttons'));\n// const Dropdowns = lazy(() => import('../app/basic-ui/Dropdowns'));\n// const Typography = lazy(() => import('../app/basic-ui/Typography'));\n// const BasicElements = lazy(() => import('../app/form-elements/BasicElements'));\n// const BasicTable = lazy(() => import('../app/tables/BasicTable'));\n// const FontAwesome = lazy(() => import('../app/icons/FontAwesome'));\n// const ChartJs = lazy(() => import('../app/charts/ChartJs'));\n// const Error404 = lazy(() => import('../app/user-pages/Error404'));\n// const Error500 = lazy(() => import('../app/user-pages/Error500'));\n// const Login = lazy(() => import('../app/user-pages/Login'));\n// const Register1 = lazy(() => import('../app/user-pages/Register'));\n// const BlankPage = lazy(() => import('../app/user-pages/BlankPage'));\n\nclass Routes extends Component {\n  render() {\n    if (this.props.usertype === 'trader') {\n      return /*#__PURE__*/React.createElement(TraderRoutes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ClientRoutes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    usertype: state.Auth.usertype\n  };\n};\n\nexport default connect(mapStateToProps)(Routes);","map":{"version":3,"sources":["/home/nathy/React_Apps/demo_1/src/pages/backend/routes.js"],"names":["React","Component","connect","ClientRoutes","TraderRoutes","Routes","render","props","usertype","mapStateToProps","state","Auth"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB,C,CAIA;AAKA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;;AAGA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC7BK,EAAAA,MAAM,GAAI;AAER,QAAG,KAAKC,KAAL,CAAWC,QAAX,KAAuB,QAA1B,EAAmC;AAEjC,0BAEA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA;AAID,KAND,MAOK;AAEJ,0BAEA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA;AAIA;AAMF;;AAtB4B;;AAyB/B,MAAMC,eAAe,GAAEC,KAAD,IAAS;AAC7B,SAAM;AACJF,IAAAA,QAAQ,EAACE,KAAK,CAACC,IAAN,CAAWH;AADhB,GAAN;AAGD,CAJD;;AAMA,eAAeN,OAAO,CAACO,eAAD,CAAP,CAAyBJ,MAAzB,CAAf","sourcesContent":["\n\nimport React, { Component} from 'react';\n\nimport { connect } from \"react-redux\"\n\nimport ClientRoutes from '../routes/ClientRoutes'\nimport TraderRoutes from '../routes/TraderRoutes'\n\n\n\n//trader routes\n\n\n\n\n// const Buttons = lazy(() => import('../app/basic-ui/Buttons'));\n// const Dropdowns = lazy(() => import('../app/basic-ui/Dropdowns'));\n// const Typography = lazy(() => import('../app/basic-ui/Typography'));\n\n// const BasicElements = lazy(() => import('../app/form-elements/BasicElements'));\n\n// const BasicTable = lazy(() => import('../app/tables/BasicTable'));\n\n// const FontAwesome = lazy(() => import('../app/icons/FontAwesome'));\n\n\n// const ChartJs = lazy(() => import('../app/charts/ChartJs'));\n\n// const Error404 = lazy(() => import('../app/user-pages/Error404'));\n// const Error500 = lazy(() => import('../app/user-pages/Error500'));\n\n// const Login = lazy(() => import('../app/user-pages/Login'));\n// const Register1 = lazy(() => import('../app/user-pages/Register'));\n\n// const BlankPage = lazy(() => import('../app/user-pages/BlankPage'));\n\n\nclass Routes extends Component {\n  render () {\n\n    if(this.props.usertype ==='trader'){\n\n      return  (\n\n      <TraderRoutes/>\n      )\n    }\n    else {\n\n     return (\n\n     <ClientRoutes/>\n     )\n    }\n    \n     \n    \n     \n   \n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return{\n    usertype:state.Auth.usertype, \n  }\n}\n\nexport default connect(mapStateToProps)(Routes);"]},"metadata":{},"sourceType":"module"}