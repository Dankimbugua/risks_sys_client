{"ast":null,"code":"var _jsxFileName = \"/home/nathy/React_Apps/demo_1/src/pages/trader/Trades/Live.js\";\nimport React, { Component } from 'react';\nimport Stepone from './steps/Stepone';\nimport Steptwo from './steps/Steptwo';\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\nexport default class LiveTrade extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      entry_price: 0.00,\n      stop_loss1: 0,\n      signal_type: '',\n      tp1: 0,\n      tp2: 0,\n      time_frame: '',\n      comment: '',\n      // asset_type:'',\n      asset: ''\n    };\n\n    this.nextstep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevstep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.submit = async event => {\n      event.preventDefault();\n      await axios.post('http://risk-api.sortika.com/api/v1/trade-requests/create', {\n        \"requestor\": 1,\n        \"win_loss_ratio\": 0.6,\n        \"asset\": \"EURUSD\",\n        \"entry_price\": 400,\n        \"take_profit_1\": 25,\n        \"take_profit_2\": 20,\n        \"stop_loss\": 700,\n        \"signal_type\": \"SS\",\n        \"time_frame\": \"1H\"\n      }).then(res => {\n        console.log(res.data);\n      }).catch(err => console.log(err));\n    };\n\n    this.handlechange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      step,\n      entry_price,\n      stop_loss1,\n      signal_type,\n      tp1,\n      tp2,\n      time_frame,\n      comment,\n      asset,\n      asset_type\n    } = this.state;\n    const values = {\n      entry_price,\n      stop_loss1,\n      signal_type,\n      tp1,\n      tp2,\n      time_frame,\n      comment,\n      asset,\n      asset_type\n    };\n\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/React.createElement(Stepone, {\n          nextstep: this.nextstep,\n          handlechange: this.handlechange,\n          values: values,\n          submit: this.submit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }\n        });\n\n      case 2:\n        return /*#__PURE__*/React.createElement(Steptwo, {\n          prevstep: this.prevstep,\n          handlechange: this.handlechange,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        });\n      // case 3:\n      //         return (\n      //             <Steptre\n      //                   prevstep={this.prevstep}\n      //                     handlechange={this.handlechange}\n      //                     values={values}\n      //             />\n      //         )\n\n      default:\n        return null;\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/nathy/React_Apps/demo_1/src/pages/trader/Trades/Live.js"],"names":["React","Component","Stepone","Steptwo","connect","axios","LiveTrade","state","step","entry_price","stop_loss1","signal_type","tp1","tp2","time_frame","comment","asset","nextstep","setState","prevstep","submit","event","preventDefault","post","then","res","console","log","data","catch","err","handlechange","target","name","value","render","asset_type","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Stepone from './steps/Stepone';\nimport Steptwo from './steps/Steptwo';\nimport { connect } from \"react-redux\"\nimport axios from 'axios'\n\nexport default class LiveTrade extends Component {\n\n    state={\n        step:1,\n        entry_price:0.00,\n        stop_loss1:0,\n        signal_type:'',\n        tp1:0,\n        tp2:0,\n        time_frame:'',\n        comment:'',\n        // asset_type:'',\n        asset:''\n    }\n\n    nextstep = () =>{\n\n        const { step } =this.state\n        this.setState({step:step+1})\n    }\n\n    prevstep = () =>{\n\n        const { step } =this.state\n        this.setState({step:step-1})\n    }\n    \n    submit=async(event)=>{\n        event.preventDefault()\n        await axios.post('http://risk-api.sortika.com/api/v1/trade-requests/create',{\n            \"requestor\": 1,\n            \"win_loss_ratio\": 0.6,\n            \"asset\":\"EURUSD\",\n            \"entry_price\": 400,\n            \"take_profit_1\": 25,\n            \"take_profit_2\": 20,\n            \"stop_loss\": 700,\n            \"signal_type\":\"SS\",\n            \"time_frame\": \"1H\"\n        }).then((res)=>{\n            console.log(res.data)\n        }).catch(err=>console.log(err))\n    }\n\n    handlechange=(event)=>{\n\n        this.setState({[event.target.name]:event.target.value})\n\n    }\n  render() {\n    const {step,entry_price,stop_loss1,signal_type,tp1,tp2,time_frame,comment,asset,asset_type} =this.state\n    const values={entry_price,stop_loss1,signal_type,tp1,tp2,time_frame,comment,asset,asset_type}\n\n    switch(step){\n        case 1:\n            return (\n                <Stepone \n                nextstep={this.nextstep}\n                handlechange={this.handlechange}\n                values={values}\n                submit={this.submit}\n            />\n            )\n\n        case 2:\n            return (\n                <Steptwo\n                     prevstep={this.prevstep}\n                        handlechange={this.handlechange}\n                        values={values}\n                />\n            )\n        // case 3:\n        //         return (\n        //             <Steptre\n        //                   prevstep={this.prevstep}\n        //                     handlechange={this.handlechange}\n        //                     values={values}\n        //             />\n        //         )\n\n         default:\n                 return null\n        \n\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}