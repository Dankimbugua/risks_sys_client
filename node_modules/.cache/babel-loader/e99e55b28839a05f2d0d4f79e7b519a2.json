{"ast":null,"code":"var _jsxFileName = \"/home/nathy/React_Apps/demo_1/src/pages/trader/Trades/steps/Stepone.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport Forex from '../Data/forex.json';\nimport Crypto from '../Data/crypto.json';\nimport Indices from '../Data/indices.json';\nimport Commodities from '../Data/commodities.json';\nexport default class Stepone extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      forex: Forex,\n      crypto: Crypto,\n      indices: Indices,\n      commodities: Commodities\n    };\n  }\n\n  render() {\n    const {\n      values,\n      handlechange,\n      nextstep\n    } = this.props;\n\n    const AssetSwitch = () => {\n      switch (values.asset_type) {\n        case 'forex':\n          return /*#__PURE__*/React.createElement(Form.Group, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"exampleInputUsername1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }\n          }, \"Forex:\"), /*#__PURE__*/React.createElement(Form.Control, {\n            as: \"select\",\n            name: \"asset\",\n            value: values.asset,\n            onChange: handlechange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"option\", {\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }\n          }, \"Select forex\"), this.state.forex.map((ix, index) => {\n            return /*#__PURE__*/React.createElement(\"option\", {\n              key: index,\n              value: ix.name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 34\n              }\n            }, ix.name);\n          })));\n\n        case 'indices':\n          return /*#__PURE__*/React.createElement(Form.Group, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"exampleInputUsername1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }\n          }, \"Indices :\"), /*#__PURE__*/React.createElement(Form.Control, {\n            as: \"select\",\n            name: \"asset\",\n            value: values.asset,\n            onChange: handlechange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"option\", {\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }\n          }, \"Select index\"), this.state.indices.map((ix, index) => {\n            return /*#__PURE__*/React.createElement(\"option\", {\n              key: index,\n              value: ix.name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 34\n              }\n            }, ix.name);\n          })));\n\n        case 'cypto_currency':\n          return /*#__PURE__*/React.createElement(Form.Group, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"exampleInputUsername1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }\n          }, \"Crypto :\"), /*#__PURE__*/React.createElement(Form.Control, {\n            as: \"select\",\n            name: \"asset\",\n            value: values.asset,\n            onChange: handlechange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"option\", {\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }\n          }, \"Select Crypto\"), this.state.crypto.map((ix, index) => {\n            return /*#__PURE__*/React.createElement(\"option\", {\n              key: index,\n              value: ix.name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 34\n              }\n            }, ix.name);\n          })));\n\n        default:\n          return /*#__PURE__*/React.createElement(Form.Group, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"exampleInputUsername1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }\n          }, \"Commodities :\"), /*#__PURE__*/React.createElement(Form.Control, {\n            as: \"select\",\n            name: \"asset\",\n            value: values.asset,\n            onChange: handlechange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"option\", {\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }\n          }, \"Select Commodity\"), this.state.commodities.map((ix, index) => {\n            return /*#__PURE__*/React.createElement(\"option\", {\n              key: index,\n              value: ix.name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 34\n              }\n            }, ix.name);\n          })));\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3 grid-margin stretch-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"Live Trade\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"forms-sample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 68\n      }\n    }, \"Asset:\")), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"asset_type\",\n      value: values.asset_type,\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, \"Select asset\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"forex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 31\n      }\n    }, \"Forex\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"indices\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 31\n      }\n    }, \"Indices\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"commodities\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 31\n      }\n    }, \"Commodities\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"cypto_currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 31\n      }\n    }, \"CryptoCurrency\"))), values.asset_type ? /*#__PURE__*/React.createElement(AssetSwitch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 46\n      }\n    }) : null, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 68\n      }\n    }, \"Entry Price:\")), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      id: \"exampleInputUsername1\",\n      placeholder: \"entry price\",\n      size: \"lg\",\n      name: \"entry_price\",\n      value: values.entry_price,\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 68\n      }\n    }, \"Stop Loss 1:\")), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      id: \"exampleInputUsername1\",\n      placeholder: \"stop_loss 1\",\n      size: \"lg\",\n      name: \"stop_loss1\",\n      value: values.stop_loss1,\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 68\n      }\n    }, \"Signal Type:\")), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"signal_type\",\n      value: values.signal_type,\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }, \"Buy Limit\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"gold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 31\n      }\n    }, \"Sell Limit\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"oil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 31\n      }\n    }, \"Buy stop\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 31\n      }\n    }, \"Sell stop\"))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 68\n      }\n    }, \"Take Profit 1(Tp1):\")), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      id: \"exampleInputUsername1\",\n      placeholder: \"Take Profit 1\",\n      size: \"lg\",\n      name: \"tp1\",\n      value: values.tp1,\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 68\n      }\n    }, \"Take Profit 2 (Tp2):\")), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      id: \"exampleInputUsername1\",\n      placeholder: \"Take Profit 2\",\n      size: \"lg\",\n      name: \"tp1\",\n      value: values.tp1,\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      variant: \"primary\",\n      className: \"btn btn-primary mr-2\",\n      onClick: nextstep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, \"Next\")))))));\n  }\n\n}","map":{"version":3,"sources":["/home/nathy/React_Apps/demo_1/src/pages/trader/Trades/steps/Stepone.js"],"names":["React","Component","Form","Forex","Crypto","Indices","Commodities","Stepone","state","forex","crypto","indices","commodities","render","values","handlechange","nextstep","props","AssetSwitch","asset_type","asset","map","ix","index","name","entry_price","stop_loss1","signal_type","tp1"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,eAAe,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE7CO,KAF6C,GAEvC;AACJC,MAAAA,KAAK,EAACN,KADF;AAEJO,MAAAA,MAAM,EAACN,MAFH;AAGJO,MAAAA,OAAO,EAACN,OAHJ;AAIJO,MAAAA,WAAW,EAACN;AAJR,KAFuC;AAAA;;AAS7CO,EAAAA,MAAM,GAAG;AAEP,UAAM;AAACC,MAAAA,MAAD;AAAQC,MAAAA,YAAR;AAAqBC,MAAAA;AAArB,QAA+B,KAAKC,KAA1C;;AAIA,UAAMC,WAAW,GAAC,MAAI;AAIpB,cAAOJ,MAAM,CAACK,UAAd;AAEI,aAAK,OAAL;AACE,8BAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACA;AAAO,YAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AAAc,YAAA,EAAE,EAAC,QAAjB;AAA2B,YAAA,IAAI,EAAC,OAAhC;AAAwC,YAAA,KAAK,EAAEL,MAAM,CAACM,KAAtD;AAA8D,YAAA,QAAQ,EAAEL,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACc;AAAS,YAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADd,EAGe,KAAKP,KAAL,CAAWC,KAAX,CAAiBY,GAAjB,CAAqB,CAACC,EAAD,EAAIC,KAAJ,KAAY;AAEpC,gCAAO;AAAQ,cAAA,GAAG,EAAEA,KAAb;AAAoB,cAAA,KAAK,EAAED,EAAE,CAACE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqCF,EAAE,CAACE,IAAxC,CAAP;AAGG,WALA,CAHf,CAFA,CAFF;;AAkBA,aAAK,SAAL;AACE,8BACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACA;AAAO,YAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AAAc,YAAA,EAAE,EAAC,QAAjB;AAA4B,YAAA,IAAI,EAAC,OAAjC;AAAyC,YAAA,KAAK,EAAEV,MAAM,CAACM,KAAvD;AAA+D,YAAA,QAAQ,EAAEL,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACY;AAAS,YAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADZ,EAGa,KAAKP,KAAL,CAAWG,OAAX,CAAmBU,GAAnB,CAAuB,CAACC,EAAD,EAAIC,KAAJ,KAAY;AAEtC,gCAAO;AAAQ,cAAA,GAAG,EAAEA,KAAb;AAAoB,cAAA,KAAK,EAAED,EAAE,CAACE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqCF,EAAE,CAACE,IAAxC,CAAP;AAGG,WALA,CAHb,CAFA,CADF;;AAeF,aAAK,gBAAL;AACE,8BACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACA;AAAO,YAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AAAc,YAAA,EAAE,EAAC,QAAjB;AAA4B,YAAA,IAAI,EAAC,OAAjC;AAAyC,YAAA,KAAK,EAAEV,MAAM,CAACM,KAAvD;AAA+D,YAAA,QAAQ,EAAEL,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACY;AAAS,YAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADZ,EAGa,KAAKP,KAAL,CAAWE,MAAX,CAAkBW,GAAlB,CAAsB,CAACC,EAAD,EAAIC,KAAJ,KAAY;AAErC,gCAAO;AAAQ,cAAA,GAAG,EAAEA,KAAb;AAAoB,cAAA,KAAK,EAAED,EAAE,CAACE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqCF,EAAE,CAACE,IAAxC,CAAP;AAGG,WALA,CAHb,CAFA,CADF;;AAgBA;AACE,8BAEJ,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACA;AAAO,YAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AAAc,YAAA,EAAE,EAAC,QAAjB;AAA4B,YAAA,IAAI,EAAC,OAAjC;AAAyC,YAAA,KAAK,EAAEV,MAAM,CAACM,KAAvD;AAA+D,YAAA,QAAQ,EAAEL,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACgB;AAAS,YAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADhB,EAGiB,KAAKP,KAAL,CAAWI,WAAX,CAAuBS,GAAvB,CAA2B,CAACC,EAAD,EAAIC,KAAJ,KAAY;AAE1C,gCAAO;AAAQ,cAAA,GAAG,EAAEA,KAAb;AAAoB,cAAA,KAAK,EAAED,EAAE,CAACE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqCF,EAAE,CAACE,IAAxC,CAAP;AAGG,WALA,CAHjB,CAFA,CAFI;AAvDV;AAwED,KA5ED;;AA8EA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvC,CADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,QAAjB;AAA4B,MAAA,IAAI,EAAC,YAAjC;AAA8C,MAAA,KAAK,EAAEV,MAAM,CAACK,UAA5D;AAAyE,MAAA,QAAQ,EAAEJ,YAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAS,MAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE;AAAQ,MAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,eAKE;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,CAFJ,CADA,EAcCD,MAAM,CAACK,UAAP,gBAAoB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,GAAqC,IAdtC,eAgBA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAvC,CADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,EAAE,EAAC,uBAFH;AAGA,MAAA,WAAW,EAAC,aAHZ;AAII,MAAA,IAAI,EAAC,IAJT;AAKI,MAAA,IAAI,EAAC,aALT;AAMI,MAAA,KAAK,EAAEL,MAAM,CAACW,WANlB;AAOI,MAAA,QAAQ,EAAEV,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAhBA,eA4BA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAvC,CADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,EAAE,EAAC,uBAFH;AAGA,MAAA,WAAW,EAAC,aAHZ;AAII,MAAA,IAAI,EAAC,IAJT;AAKI,MAAA,IAAI,EAAC,YALT;AAMI,MAAA,KAAK,EAAED,MAAM,CAACY,UANlB;AAOI,MAAA,QAAQ,EAAEX,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA5BA,eAuCA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAvC,CADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,QAAjB;AAA4B,MAAA,IAAI,EAAC,aAAjC;AAA+C,MAAA,KAAK,EAAED,MAAM,CAACa,WAA7D;AAA2E,MAAA,QAAQ,EAAEZ,YAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAS,MAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,eAEE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CAFJ,CAvCA,eAiDA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAvC,CADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,EAAE,EAAC,uBAFH;AAGA,MAAA,WAAW,EAAC,eAHZ;AAII,MAAA,IAAI,EAAC,IAJT;AAKI,MAAA,IAAI,EAAC,KALT;AAMI,MAAA,KAAK,EAAED,MAAM,CAACc,GANlB;AAOI,MAAA,QAAQ,EAAEb,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAjDA,eA4DA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAvC,CADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,EAAE,EAAC,uBAFH;AAGA,MAAA,WAAW,EAAC,eAHZ;AAII,MAAA,IAAI,EAAC,IAJT;AAKI,MAAA,IAAI,EAAC,KALT;AAMI,MAAA,KAAK,EAAED,MAAM,CAACc,GANlB;AAOI,MAAA,QAAQ,EAAEb,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA5DA,eAwEA;AAAS,MAAA,OAAO,EAAC,SAAjB;AAA2B,MAAA,SAAS,EAAC,sBAArC;AAA4D,MAAA,OAAO,EAAEC,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxEA,CAFJ,CADA,CADJ,CAFJ,CADN,CADF;AA2FD;;AAxL4C","sourcesContent":["import React, { Component } from 'react'\nimport {Form}from 'react-bootstrap'\nimport Forex from '../Data/forex.json'\nimport Crypto from '../Data/crypto.json'\nimport Indices from '../Data/indices.json'\nimport Commodities from '../Data/commodities.json'\n\nexport default class Stepone extends Component {\n\n  state={\n    forex:Forex,\n    crypto:Crypto,\n    indices:Indices,\n    commodities:Commodities\n  }\n\n  render() {\n   \n    const {values,handlechange,nextstep}=this.props\n\n\n\n    const AssetSwitch=()=>{\n\n\n\n      switch(values.asset_type){\n\n          case 'forex':\n            return(\n\n              <Form.Group>\n              <label htmlFor=\"exampleInputUsername1\">Forex:</label>\n              <Form.Control as=\"select\"  name=\"asset\" value={values.asset}  onChange={handlechange}>\n                            <option  value=\"\">Select forex</option>\n\n                            {this.state.forex.map((ix,index)=>{\n\n                          return <option key={index} value={ix.name}>{ix.name}</option> \n                              \n                                 \n                            })}\n                            </Form.Control>\n            </Form.Group>\n\n            )\n\n            case 'indices':\n              return(\n                <Form.Group>\n                <label htmlFor=\"exampleInputUsername1\">Indices :</label>\n                <Form.Control as=\"select\"   name=\"asset\" value={values.asset}  onChange={handlechange}>\n                            <option  value=\"\">Select index</option>\n\n                            {this.state.indices.map((ix,index)=>{\n\n                          return <option key={index} value={ix.name}>{ix.name}</option> \n                              \n                                 \n                            })}\n                            </Form.Control>\n              </Form.Group>\n              )\n            case 'cypto_currency':\n              return(\n                <Form.Group>\n                <label htmlFor=\"exampleInputUsername1\">Crypto :</label>\n                <Form.Control as=\"select\"   name=\"asset\" value={values.asset}  onChange={handlechange}>\n                            <option  value=\"\">Select Crypto</option>\n\n                            {this.state.crypto.map((ix,index)=>{\n\n                          return <option key={index} value={ix.name}>{ix.name}</option> \n                              \n                                 \n                            })}\n                            </Form.Control>\n              </Form.Group>\n              )\n\n              default:\n                return(\n\n            <Form.Group>\n            <label htmlFor=\"exampleInputUsername1\">Commodities :</label>\n            <Form.Control as=\"select\"   name=\"asset\" value={values.asset}  onChange={handlechange}>\n                            <option  value=\"\">Select Commodity</option>\n\n                            {this.state.commodities.map((ix,index)=>{\n\n                          return <option key={index} value={ix.name}>{ix.name}</option> \n                              \n                                 \n                            })}\n                            </Form.Control>\n          </Form.Group>\n                )\n      }\n    }\n    \n    return (\n      <div>\n            <div className=\"row\">\n\n                <div className=\"col-md-6 offset-md-3 grid-margin stretch-card\">\n                    <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">Live Trade</h4>\n                        <form className=\"forms-sample\" >\n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Asset:</strong></label>\n                            <Form.Control as=\"select\"   name=\"asset_type\" value={values.asset_type}  onChange={handlechange}>\n                            <option  value=\"\">Select asset</option>\n                              <option value=\"forex\">Forex</option>\n                              <option value=\"indices\">Indices</option>\n                              <option value=\"commodities\">Commodities</option>\n                              <option value=\"cypto_currency\">CryptoCurrency</option>\n        \n                              </Form.Control>\n                        </Form.Group>\n\n\n                        {values.asset_type ? <AssetSwitch/> : null}\n\n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Entry Price:</strong></label>\n                            <Form.Control\n                            type=\"text\"\n                            id=\"exampleInputUsername1\"\n                            placeholder=\"entry price\"\n                                size=\"lg\"\n                                name=\"entry_price\"\n                                value={values.entry_price} \n                                onChange={handlechange}/>\n                        </Form.Group>\n                      \n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Stop Loss 1:</strong></label>\n                            <Form.Control\n                            type=\"text\"\n                            id=\"exampleInputUsername1\"\n                            placeholder=\"stop_loss 1\"\n                                size=\"lg\"\n                                name=\"stop_loss1\"\n                                value={values.stop_loss1} \n                                onChange={handlechange}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Signal Type:</strong></label>\n                            <Form.Control as=\"select\"   name=\"signal_type\" value={values.signal_type}  onChange={handlechange}>\n                            <option  value=\"\">Buy Limit</option>\n                              <option value=\"gold\">Sell Limit</option>\n                              <option value=\"oil\">Buy stop</option>\n                              <option value=\"currency\">Sell stop</option>\n        \n                              </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Take Profit 1(Tp1):</strong></label>\n                            <Form.Control\n                            type=\"text\"\n                            id=\"exampleInputUsername1\"\n                            placeholder=\"Take Profit 1\"\n                                size=\"lg\"\n                                name=\"tp1\"\n                                value={values.tp1} \n                                onChange={handlechange}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Take Profit 2 (Tp2):</strong></label>\n                            <Form.Control\n                            type=\"text\"\n                            id=\"exampleInputUsername1\"\n                            placeholder=\"Take Profit 2\"\n                                size=\"lg\"\n                                name=\"tp1\"\n                                value={values.tp1} \n                                onChange={handlechange}/>\n                        </Form.Group>\n                  \n                        <button  variant=\"primary\" className=\"btn btn-primary mr-2\" onClick={nextstep} >Next</button>\n                        </form>\n                    </div>\n                    </div>\n                </div>\n            </div>\n      </div>\n    )\n\n\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module"}