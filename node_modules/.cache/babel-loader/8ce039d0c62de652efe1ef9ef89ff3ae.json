{"ast":null,"code":"import _regeneratorRuntime from\"/home/nathy/React_Apps/demo_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/nathy/React_Apps/demo_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';// import { MyfxbookApi } from 'myfxbook-api-client';\nimport*as calc from'./functionz';//state actions\nexport var stateError=function stateError(error){return{type:'STATE_HAS_ERROR',error:error};};//Auth Actions\nexport var registerStart=function registerStart(){return{type:'REGISTER_START'};};export var registerFinished=function registerFinished(user,token,usertype){return{type:'REGISTER_FINISHED',user:user,token:token,usertype:usertype};};export var registerError=function registerError(error){return{type:'REGISTER_ERROR',error:error};};export var forexstart=function forexstart(){return{type:'FETCH_START'};};export var forexfinished=function forexfinished(rates){return{type:'FETCH_END',rates:rates};};export var forexerr=function forexerr(error){return{type:'FETCH_ERROR',error:error};};export var registerClientUser=function registerClientUser(username,email,pass){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(registerStart());_context2.next=3;return axios.post('https://api.sortika.com/client/register',{username:username,email:email,password:pass}).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(res.data);_context.next=3;return dispatch(registerFinished(res.data.user,res.data.access_token,'client'));case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x2){return _ref2.apply(this,arguments);};}()).catch(function(error){console.log(error);dispatch(registerError(error));});case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref.apply(this,arguments);};}();};export var registerTraderUser=function registerTraderUser(username,email,pass){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var myfxprofile;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:dispatch(registerStart());_context5.next=3;return axios.post('https://api.sortika.com/trader/myfx/',{email:email,password:pass}).then(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(res){var win_ratio,loss_ratio,avgprofit;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:console.log(res);_context4.t0=res.data.status;_context4.next=_context4.t0===419?4:_context4.t0===417?6:_context4.t0===200?8:20;break;case 4:dispatch(stateError(res.data.info));return _context4.abrupt(\"break\",21);case 6:dispatch(stateError(res.data.info));return _context4.abrupt(\"break\",21);case 8:_context4.next=10;return calc.calculateWin(res.data.history);case 10:win_ratio=_context4.sent;_context4.next=13;return calc.calculateloss(res.data.history);case 13:loss_ratio=_context4.sent;_context4.next=16;return calc.calc_profitfactor(res.data.acc);case 16:avgprofit=_context4.sent;_context4.next=19;return axios.post('https://api.sortika.com/trader/register',{username:username,email:email,password:pass,win_ratio:win_ratio,loss_ratio:loss_ratio,profit_factor:avgprofit}).then(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(res){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log(res.data);_context3.next=3;return dispatch(registerFinished(res.data.user,res.data.access_token,'trader'));case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5){return _ref5.apply(this,arguments);};}()).catch(function(error){console.log(error);dispatch(registerError(error));});case 19:return _context4.abrupt(\"break\",21);case 20:dispatch(stateError('Server not available'));case 21:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}()).catch(function(error){dispatch(stateError(error.message));console.log(error);});case 3:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var loginStart=function loginStart(){return{type:'LOGIN_START'};};export var loginFinished=function loginFinished(user,token,usertype){return{type:'LOGIN_FINISHED',user:user,token:token,usertype:usertype};};export var loginError=function loginError(error){return{type:'LOGIN_ERROR',error:error};};export var loginClientUser=function loginClientUser(email,pass){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:dispatch(loginStart());console.log('client ..............');_context7.next=4;return axios.post('https://api.sortika.com/client/login',{email:email,password:pass}).then(/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(res){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:console.log(res.data);_context6.next=3;return dispatch(loginFinished(res.data.user,res.data.access_token,'client'));case 3:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x7){return _ref7.apply(this,arguments);};}()).catch(function(error){console.log(error);dispatch(loginError(error));});case 4:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x6){return _ref6.apply(this,arguments);};}();};export var loginTraderUser=function loginTraderUser(email,pass){return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(dispatch){return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:dispatch(loginStart());console.log('trader ..............');_context9.next=4;return axios.post('https://api.sortika.com/trader/login',{email:email,password:pass}).then(/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(res){return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:console.log(res.data);_context8.next=3;return dispatch(loginFinished(res.data.user,res.data.access_token,'trader'));case 3:case\"end\":return _context8.stop();}}},_callee8);}));return function(_x9){return _ref9.apply(this,arguments);};}()).catch(function(error){console.log(error);dispatch(loginError(error));});case 4:case\"end\":return _context9.stop();}}},_callee9);}));return function(_x8){return _ref8.apply(this,arguments);};}();};export var logoutStart=function logoutStart(){return{type:'LOGOUT_START'};};export var logoutFinished=function logoutFinished(){return{type:'LOGOUT_FINISHED'};};export var logoutError=function logoutError(error){return{type:'LOGOUT_ERROR',error:error};};export var logoutClientUser=function logoutClientUser(token){return/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(dispatch){return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:console.log('logging out>>>');dispatch(logoutStart());// try {\n_context10.next=4;return axios.post('https://api.sortika.com/client/logout?token='+token).then(function(){dispatch(logoutFinished());}).catch(function(error){dispatch(logoutError(error));});case 4:case\"end\":return _context10.stop();}}},_callee10);}));return function(_x10){return _ref10.apply(this,arguments);};}();};export var logoutTraderUser=function logoutTraderUser(token){return/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(dispatch){return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:console.log('logging out>>>');dispatch(logoutStart());// try {\n_context11.next=4;return axios.post('https://api.sortika.com/trader/logout?token='+token).then(function(){dispatch(logoutFinished());}).catch(function(error){dispatch(logoutError(error));});case 4:case\"end\":return _context11.stop();}}},_callee11);}));return function(_x11){return _ref11.apply(this,arguments);};}();};export var getForex=function getForex(){return/*#__PURE__*/function(){var _ref12=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(dispatch){return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:dispatch(forexstart());_context12.next=3;return axios.get('https://www.freeforexapi.com/api/live?pairs=EURGBP,USDJPY,USDCAD,USDEUR,NZDUSD,USDCHF,AUDUSD').then(function(res){console.log(res.data.rates);dispatch(forexfinished(res.data.rates));}).catch(function(error){console.log(error);dispatch(forexerr(error));});case 3:case\"end\":return _context12.stop();}}},_callee12);}));return function(_x12){return _ref12.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/nathy/React_Apps/demo_1/src/pages/redux/Action.js"],"names":["axios","calc","stateError","error","type","registerStart","registerFinished","user","token","usertype","registerError","forexstart","forexfinished","rates","forexerr","registerClientUser","username","email","pass","dispatch","post","password","then","res","console","log","data","access_token","catch","registerTraderUser","status","info","calculateWin","history","win_ratio","calculateloss","loss_ratio","calc_profitfactor","acc","avgprofit","profit_factor","message","loginStart","loginFinished","loginError","loginClientUser","loginTraderUser","logoutStart","logoutFinished","logoutError","logoutClientUser","logoutTraderUser","getForex","get"],"mappings":"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","sourcesContent":["import axios from 'axios'\n// import { MyfxbookApi } from 'myfxbook-api-client';\nimport * as calc from './functionz'\n\n\n    //state actions\n\n    export const stateError = error => ({\n      type:'STATE_HAS_ERROR',\n      error\n    })\n    //Auth Actions\n    export const registerStart = () => ({\n      type: 'REGISTER_START',\n    })\n    \n    export const registerFinished = (user,token,usertype) => ({\n      type: 'REGISTER_FINISHED',\n      user,\n      token,\n      usertype\n    })\n\n    export const registerError = error => ({\n      type:'REGISTER_ERROR',\n      error\n    })\n\n    export const forexstart=()=>({\n      type:'FETCH_START',\n\n    })\n\n    export const forexfinished=(rates)=>({\n      type:'FETCH_END',\n      rates\n    })\n\n    export const forexerr=(error)=>({\n      type:'FETCH_ERROR',\n      error\n    })\n  \n   export const registerClientUser =  (username,email,pass) => async(dispatch)=>{\n      dispatch(registerStart())\n\n      \n      \n      await axios.post('https://api.sortika.com/client/register',\n      {\n        username:username,\n        email:email,\n        password:pass\n      })\n      .then( async(res)=>{ \n             \n        console.log(res.data)\n           await  dispatch(registerFinished(res.data.user,res.data.access_token,'client'))\n          })\n          \n  .catch ((error) =>{\n    \n    console.log(error);\n    dispatch(registerError(error))\n \n    \n  })\n    }\n   export const registerTraderUser =  (username,email,pass) => async(dispatch)=>{\n      dispatch(registerStart())\n        let myfxprofile;\n\n        await axios.post('https://api.sortika.com/trader/myfx/',\n      { \n        email:email,\n        password:pass\n      }).then(async(res)=>{\n          console.log(res)\n          switch (res.data.status){\n\n            case 419 :\n              dispatch(stateError(res.data.info))\n              break\n\n              case 417:\n                dispatch(stateError(res.data.info))\n                break\n                case 200:\n                  //calculate win ratio\n                    let win_ratio=await calc.calculateWin(res.data.history)\n                    let loss_ratio=await calc.calculateloss(res.data.history)\n                    let avgprofit =await calc.calc_profitfactor(res.data.acc)\n\n                // console.log(win_ratio+ ' '+loss_ratio+' '+avgprofit)\n                  //calculate profit ratio\n                  //calculate profit factor\n\n                  await axios.post('https://api.sortika.com/trader/register',\n            {\n              username:username,\n              email:email,\n              password:pass,\n              win_ratio:win_ratio,\n              loss_ratio:loss_ratio,\n              profit_factor:avgprofit\n\n            }).then( async(res)=>{ \n                  \n                      console.log(res.data)\n                        await  dispatch(registerFinished(res.data.user,res.data.access_token,'trader'))\n                        })\n                        \n                .catch ((error) =>{\n                  \n                  console.log(error);\n                  dispatch(registerError(error))\n              \n                  \n                })\n\n                  break\n              default:\n                dispatch(stateError('Server not available'))\n          }\n         \n        }).catch((error) =>{\n          dispatch(stateError(error.message))\n          console.log(error)\n        })\n       \n\n \n      \n    }\n\n\n    export const loginStart = () => ({\n        type: 'LOGIN_START',\n      })\n      \n      export const loginFinished = (user,token,usertype) => ({\n        type: 'LOGIN_FINISHED',\n        user,\n        token,\n        usertype\n      })\n      \n      export const loginError = error => ({\n        type:'LOGIN_ERROR',\n        error\n      })\n      export const loginClientUser =  (email,pass) => async(dispatch)=>{\n        dispatch(loginStart())\n        console.log('client ..............')\n\n        await axios.post('https://api.sortika.com/client/login',\n        {\n          email:email,\n          password:pass\n        })\n        .then( async(res)=>{ \n               \n          console.log(res.data)\n             await  dispatch(loginFinished(res.data.user,res.data.access_token,'client'))\n            })\n            \n    .catch ((error) =>{\n      \n      console.log(error);\n      dispatch(loginError(error))\n   \n      \n    })\n      }\n      export const loginTraderUser =  (email,pass) => async(dispatch)=>{\n        dispatch(loginStart())\n        console.log('trader ..............')\n        await axios.post('https://api.sortika.com/trader/login',\n        {\n          email:email,\n          password:pass\n        })\n        .then( async(res)=>{ \n               \n          console.log(res.data)\n             await  dispatch(loginFinished(res.data.user,res.data.access_token,'trader'))\n            })\n            \n    .catch ((error) =>{\n      \n      console.log(error);\n      dispatch(loginError(error))\n   \n      \n    })\n      }\n\n      export const logoutStart = () => ({\n        type: 'LOGOUT_START'\n      })\n      \n     export const logoutFinished = () => ({\n        type: 'LOGOUT_FINISHED'\n      })\n      \n      export const logoutError = error => ({\n        type: 'LOGOUT_ERROR',\n        error\n      })\n\n  export const logoutClientUser =  (token) => async(dispatch) => {\n    console.log('logging out>>>')\n    dispatch(logoutStart())\n    // try {\n    await  axios.post('https://api.sortika.com/client/logout?token='+token)\n    .then(() => {\n        dispatch(logoutFinished())\n    }).catch((error)=>{\n\n        dispatch(logoutError(error))\n\n    })\n    }\n  export const logoutTraderUser =  (token) => async(dispatch) => {\n    console.log('logging out>>>')\n    dispatch(logoutStart())\n    // try {\n    await  axios.post('https://api.sortika.com/trader/logout?token='+token)\n    .then(() => {\n        dispatch(logoutFinished())\n    }).catch((error)=>{\n\n        dispatch(logoutError(error))\n\n    })\n    }\n\n    export const getForex=()=>async(dispatch)=>{\n      dispatch(forexstart())\n\n        await axios.get('https://www.freeforexapi.com/api/live?pairs=EURGBP,USDJPY,USDCAD,USDEUR,NZDUSD,USDCHF,AUDUSD').then((res)=>{\n          console.log(res.data.rates)\n          dispatch(forexfinished(res.data.rates))\n        }).catch((error)=>{\n          console.log(error)\n          dispatch(forexerr(error))\n        })\n\n    }"]},"metadata":{},"sourceType":"module"}