{"ast":null,"code":"var _jsxFileName = \"/home/nathy/React_Apps/demo_1/src/pages/trader/Trades/steps/Stepone.js\";\nimport React, { Component } from 'react';\nimport { Form, Modal, Button } from 'react-bootstrap';\nimport SimpleReactValidator from 'simple-react-validator'; // import Forex from '../Data/forex.json'\n// import Crypto from '../Data/crypto.json'\n// import Indices from '../Data/indices.json'\n// import Commodities from '../Data/commodities.json'\n\nimport axios from 'axios';\nexport default class Stepone extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // forex:Forex,\n      // crypto:Crypto,\n      // indices:Indices,\n      assets: null // commodities:Commodities\n\n    };\n    this.validator = new SimpleReactValidator();\n  }\n\n  async componentDidMount() {\n    await axios.get('http://risk-api.sortika.com/api/v1/settings/assets', {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res.data);\n      this.setState({\n        assets: res.data.data\n      });\n    }).catch(error => {\n      console.log(error); // dispatch(assets_err(error))\n    });\n  }\n\n  render() {\n    const {\n      values,\n      handlechange,\n      submit,\n      nextstep\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      onHide: () => this.setState({\n        show: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"Live Trade\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 27\n      }\n    }, values.response), values.errors ? values.errors.map((err, index) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        class: \"alert-danger\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 36\n        }\n      }, err);\n    }) : null), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({\n        show: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"Okay\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3 grid-margin stretch-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"Live Trade\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"forms-sample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 68\n      }\n    }, \"Asset:\")), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"asset\",\n      value: values.asset,\n      onFocus: () => this.validator.showMessageFor('asset'),\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, \"Select asset\"), this.state.assets ? this.state.assets.map((ix, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        value: ix.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 32\n        }\n      }, ix.name);\n    }) : null)), this.validator.message('asset', values.asset, 'required'), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 68\n      }\n    }, \"Entry Price:\")), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      id: \"exampleInputUsername1\",\n      placeholder: \"entry price\",\n      size: \"lg\",\n      name: \"entry_price\",\n      value: values.entry_price,\n      onFocus: () => this.validator.showMessageFor('entry_price'),\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    })), this.validator.message('entry_price', values.entry_price, 'required'), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 68\n      }\n    }, \"Stop Loss 1:\")), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      id: \"exampleInputUsername1\",\n      placeholder: \"stop_loss 1\",\n      size: \"lg\",\n      name: \"stop_loss1\",\n      value: values.stop_loss1,\n      onFocus: () => this.validator.showMessageFor('stop_loss1'),\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    })), this.validator.message('stop_loss1', values.stop_loss1, 'required'), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 68\n      }\n    }, \"Signal Type:\")), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      onFocus: () => this.validator.showMessageFor('signal_type'),\n      name: \"signal_type\",\n      value: values.signal_type,\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, \"select signal type\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"BL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, \"Buy Limit\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"SL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 31\n      }\n    }, \"Sell Limit\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"BS\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 31\n      }\n    }, \"Buy stop\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"SS\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 31\n      }\n    }, \"Sell stop\"))), this.validator.message('signal_type', values.signal_type, 'required'), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 68\n      }\n    }, \"Take Profit 1(Tp1):\")), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      id: \"exampleInputUsername1\",\n      placeholder: \"Take Profit 1\",\n      size: \"lg\",\n      name: \"tp1\",\n      value: values.tp1,\n      onFocus: () => this.validator.showMessageFor('tp1'),\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    })), this.validator.message('tp1', values.tp1, 'required'), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 68\n      }\n    }, \"Take Profit 2 (Tp2):\")), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      id: \"exampleInputUsername1\",\n      placeholder: \"Take Profit 2\",\n      size: \"lg\",\n      name: \"tp2\",\n      value: values.tp2,\n      onFocus: () => this.validator.showMessageFor('tp2'),\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    })), this.validator.message('tp2', values.tp2, 'required'), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputUsername1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 68\n      }\n    }, \"Time Frame\")), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"time_frame\",\n      onFocus: () => this.validator.showMessageFor('time_frame'),\n      value: values.time_frame,\n      onChange: handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }, \"Select time frame\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1H\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 31\n      }\n    }, \"1 hour\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"4H\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 31\n      }\n    }, \"4 hours\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1D\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 31\n      }\n    }, \"24 hours(ONE DAY)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1W\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 31\n      }\n    }, \"7 days(ONE WEEK)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1M\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 31\n      }\n    }, \"ONE MONTH\"))), this.validator.message('time_frame', values.time_frame, 'required'), this.validator.allValid() ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary mr-2\",\n      onClick: submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 26\n      }\n    }, \"Submit\") : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary mr-2\",\n      onClick: submit,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 27\n      }\n    }, \"Submit\")))))));\n  }\n\n}","map":{"version":3,"sources":["/home/nathy/React_Apps/demo_1/src/pages/trader/Trades/steps/Stepone.js"],"names":["React","Component","Form","Modal","Button","SimpleReactValidator","axios","Stepone","constructor","state","assets","validator","componentDidMount","get","headers","then","res","console","log","data","setState","catch","error","render","values","handlechange","submit","nextstep","props","show","response","errors","map","err","index","asset","showMessageFor","ix","name","message","entry_price","stop_loss1","signal_type","tp1","tp2","time_frame","allValid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Form,Modal,Button}from 'react-bootstrap'\nimport SimpleReactValidator from 'simple-react-validator';\n\n// import Forex from '../Data/forex.json'\n// import Crypto from '../Data/crypto.json'\n// import Indices from '../Data/indices.json'\n// import Commodities from '../Data/commodities.json'\nimport axios from 'axios'\n\n\nexport default class Stepone extends Component {\n\n  constructor(){\n    super()\n  this.state={\n    // forex:Forex,\n    // crypto:Crypto,\n    // indices:Indices,\n    assets:null,\n    // commodities:Commodities\n  }\n\n  this.validator = new SimpleReactValidator()\n\n  }\n  async componentDidMount(){\n\n    await axios.get('http://risk-api.sortika.com/api/v1/settings/assets',\n    {\n    headers:{\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/json',\n    }\n  }\n    ).then((res)=>{\n      console.log(res.data)\n      this.setState({assets:res.data.data})\n    }).catch((error)=>{\n      console.log(error)\n      // dispatch(assets_err(error))\n    })\n  }\n\n  render() {\n   \n    const {values,handlechange,submit,nextstep}=this.props\n\n    \n    return (\n      <div>\n            <div className=\"row\">\n\n\n                <Modal show={this.state.show} onHide={()=>this.setState({show:false})}>\n                        <Modal.Header closeButton>\n                        <Modal.Title>Live Trade</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                          <p >\n                          {values.response}\n                          </p>\n\n                          {values.errors ? values.errors.map((err,index)=>{\n\n                            return <span class=\"alert-danger\" key={index}>{err}</span> \n                          })\n                          : null\n                          }\n                        </Modal.Body>\n                        <Modal.Footer>\n                        <Button variant=\"primary\" onClick={()=>this.setState({show:false})}>\n                            Okay\n                        </Button>\n                        \n                        </Modal.Footer>\n                    </Modal>\n\n                <div className=\"col-md-6 offset-md-3 grid-margin stretch-card\">\n                    <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">Live Trade</h4>\n                        <form className=\"forms-sample\" >\n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Asset:</strong></label>\n                            <Form.Control as=\"select\"   name=\"asset\"\n                             value={values.asset} \n                             onFocus={()=>this.validator.showMessageFor('asset')}\n                             onChange={handlechange}>\n                            <option  value=\"\">Select asset</option>\n                              {/* <option value=\"forex\">Forex</option>\n                              <option value=\"indices\">Indices</option>\n                              <option value=\"commodities\">Commodities</option>\n                              <option value=\"cypto_currency\">CryptoCurrency</option>\n         */}\n                                {this.state.assets ? this.state.assets.map((ix,index)=>{\n\n                        return <option key={index} value={ix.name}>{ix.name}</option> \n                            \n                              \n                          })\n                          : null }\n                                                      </Form.Control>\n                        </Form.Group>\n                        {this.validator.message('asset', values.asset, 'required')}\n\n\n                        {/* {values.asset_type ? <AssetSwitch/> : null} */}\n\n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Entry Price:</strong></label>\n                            <Form.Control\n                            type=\"text\"\n                            id=\"exampleInputUsername1\"\n                            placeholder=\"entry price\"\n                                size=\"lg\"\n                                name=\"entry_price\"\n                                value={values.entry_price} \n                                onFocus={()=>this.validator.showMessageFor('entry_price')}\n                                onChange={handlechange}/>\n                        </Form.Group>\n                        {this.validator.message('entry_price', values.entry_price, 'required')}\n\n                      \n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Stop Loss 1:</strong></label>\n                            <Form.Control\n                            type=\"text\"\n                            id=\"exampleInputUsername1\"\n                            placeholder=\"stop_loss 1\"\n                                size=\"lg\"\n                                name=\"stop_loss1\"\n                                value={values.stop_loss1} \n                                onFocus={()=>this.validator.showMessageFor('stop_loss1')}\n                                onChange={handlechange}/>\n                        </Form.Group>\n                        {this.validator.message('stop_loss1', values.stop_loss1, 'required')}\n\n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Signal Type:</strong></label>\n                            <Form.Control as=\"select\"  \n                            onFocus={()=>this.validator.showMessageFor('signal_type')}\n                             name=\"signal_type\" value={values.signal_type}  onChange={handlechange}>\n                            <option  value=\"\">select signal type</option>\n                            <option  value=\"BL\">Buy Limit</option>\n                              <option value=\"SL\">Sell Limit</option>\n                              <option value=\"BS\">Buy stop</option>\n                              <option value=\"SS\">Sell stop</option>\n        \n                              </Form.Control>\n                        </Form.Group>\n                        {this.validator.message('signal_type', values.signal_type, 'required')}\n\n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Take Profit 1(Tp1):</strong></label>\n                            <Form.Control\n                            type=\"text\"\n                            id=\"exampleInputUsername1\"\n                            placeholder=\"Take Profit 1\"\n                                size=\"lg\"\n                                name=\"tp1\"\n                                value={values.tp1} \n                                onFocus={()=>this.validator.showMessageFor('tp1')}\n                                onChange={handlechange}/>\n                        </Form.Group>\n                        {this.validator.message('tp1', values.tp1, 'required')}\n\n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Take Profit 2 (Tp2):</strong></label>\n                            <Form.Control\n                            type=\"text\"\n                            id=\"exampleInputUsername1\"\n                            placeholder=\"Take Profit 2\"\n                                size=\"lg\"\n                                name=\"tp2\"\n                                value={values.tp2} \n                                onFocus={()=>this.validator.showMessageFor('tp2')}\n                                onChange={handlechange}/>\n                        </Form.Group>\n                        {this.validator.message('tp2', values.tp2, 'required')}\n\n                        <Form.Group>\n                            <label htmlFor=\"exampleInputUsername1\"><strong>Time Frame</strong></label>\n                            <Form.Control as=\"select\"  name=\"time_frame\"\n                           onFocus={()=>this.validator.showMessageFor('time_frame')} \n                            value={values.time_frame}  onChange={handlechange}>\n                            <option  value=\"\">Select time frame</option>\n                              <option value=\"1H\">1 hour</option>\n                              <option value=\"4H\">4 hours</option>\n                              <option value=\"1D\">24 hours(ONE DAY)</option>\n                              <option value=\"1W\">7 days(ONE WEEK)</option>\n                              <option value=\"1M\">ONE MONTH</option>\n                                                  \n                                \n                              </Form.Control>\n                        </Form.Group>\n                        {this.validator.message('time_frame', values.time_frame, 'required')}\n\n                        {/* <button  variant=\"primary\" className=\"btn btn-primary mr-2\" onClick={nextstep} >Next</button> */}\n                       {\n                         this.validator.allValid() ?\n                         <button type=\"submit\" className=\"btn btn-primary mr-2\" onClick={submit} >Submit</button>\n                          :\n                          <button type=\"submit\" className=\"btn btn-primary mr-2\" onClick={submit} disabled >Submit</button>\n\n                       }\n\n                        </form>\n                    </div>\n                    </div>\n                </div>\n            </div>\n      </div>\n    )\n\n\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module"}