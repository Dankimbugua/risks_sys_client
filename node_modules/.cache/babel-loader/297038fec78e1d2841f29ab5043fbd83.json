{"ast":null,"code":"var _jsxFileName = \"/home/nathy/React_Apps/demo_1/src/pages/Auth/SignupModal.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-responsive-modal';\nimport { registerClientUser, registerTraderUser } from '../redux/Action';\nimport { connect } from \"react-redux\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport axios from 'axios';\n\nclass SignupModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitClientHandler = async event => {\n      event.preventDefault(); // this.setState({loading:true})\n\n      await this.props.registerClientUser(this.state.username, this.state.email, this.state.password);\n    };\n\n    this.submitTraderHandler = async event => {\n      //   console.log('start......')\n      //   console.log(this.state.email)\n      event.preventDefault(); // this.setState({loading:true})\n\n      await this.props.registerTraderUser(this.state.username, this.state.email, this.state.password);\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      username: '',\n      email: '',\n      password: ''\n    };\n    this.validator = new SimpleReactValidator();\n  }\n\n  async check_email(value) {\n    if (this.props.type === 'client') {\n      // if()\n      await axios.post('https://api.sortika.com/client/check_mail', {\n        email: value\n      }).then(res => {\n        console.log(res.data.exists);\n\n        if (res.data.exists == 1) {\n          return true;\n        } else {\n          return false;\n        }\n      }).catch(error => console.log(error));\n    } else {\n      await axios.post('https://api.sortika.com/trader/check_mail', {\n        email: value\n      }).then(res => {\n        console.log(res.data.exists);\n\n        if (res.data.exists == 1) {\n          return true;\n        } else {\n          return false;\n        }\n      }).catch(error => console.log(error));\n    } // return exists;\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      open: this.props.open,\n      onClose: this.props.close,\n      center: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"signup\",\n      onSubmit: this.props.type === 'trader' ? this.submitTraderHandler : this.submitClientHandler,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }), this.props.err ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 30\n      }\n    }, this.props.err, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"alert\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, \"\\xD7\"))) : null, this.props.success_message ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 24\n      }\n    }, this.props.success_message, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"alert\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \"\\xD7\"))) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"username\",\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.username,\n      onChange: this.changeHandler,\n      onBlur: () => this.validator.showMessageFor('username'),\n      placeholder: \"First name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }), this.validator.message('username', this.state.username, 'required|alpha_num_space|max:12|min:6')), this.props.type == 'trader' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \" Your Myfx Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Enter email\",\n      value: this.state.email,\n      onChange: this.changeHandler,\n      onBlur: () => this.validator.showMessageFor('email'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }), this.validator.message('email', this.state.email, 'required|email')) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Enter email\",\n      value: this.state.email,\n      onChange: this.changeHandler,\n      onBlur: () => this.validator.showMessageFor('email'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }), this.validator.message('email', this.state.email, 'required|email')), this.props.type == 'trader' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"Your Myfx Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      className: \"form-control\",\n      value: this.state.password,\n      onChange: this.changeHandler,\n      onBlur: () => this.validator.showMessageFor('password'),\n      placeholder: \"Enter password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }), this.validator.message('password', this.state.password, 'required|max:12|min:6')) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      className: \"form-control\",\n      value: this.state.password,\n      onChange: this.changeHandler,\n      onBlur: () => this.validator.showMessageFor('password'),\n      placeholder: \"Enter password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }), this.validator.message('password', this.state.password, 'required|max:12|min:6')), this.props.fetching ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      type: \"button\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, \"Processing....\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm\",\n      role: \"status\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    })) : this.validator.allValid() ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, \"Sign Up\") : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"forgot-password text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, \"Already registered \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.props.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 40\n      }\n    }, \"sign in?\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    fetching: state.Auth.isFetching,\n    err: state.Auth.errorMessage,\n    success_message: state.Auth.successMessage\n  };\n};\n\nconst mapDispatchToProps = {\n  registerClientUser,\n  registerTraderUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupModal);","map":{"version":3,"sources":["/home/nathy/React_Apps/demo_1/src/pages/Auth/SignupModal.js"],"names":["React","Component","Modal","registerClientUser","registerTraderUser","connect","SimpleReactValidator","axios","SignupModal","constructor","props","submitClientHandler","event","preventDefault","state","username","email","password","submitTraderHandler","changeHandler","setState","target","name","value","validator","check_email","type","post","then","res","console","log","data","exists","catch","error","render","open","close","err","success_message","showMessageFor","message","fetching","allValid","link","mapStateToProps","Auth","isFetching","errorMessage","successMessage","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React ,{Component}from 'react'\nimport Modal from 'react-responsive-modal';\nimport {registerClientUser,registerTraderUser} from '../redux/Action'\nimport { connect } from \"react-redux\"\nimport SimpleReactValidator from 'simple-react-validator';\nimport axios from 'axios'\n\n\nclass  SignupModal  extends Component{\n\n    constructor(props){\n        super(props)\n       this.state={\n            username:'',\n            email:'',\n            password:''\n        }\n        this.validator = new SimpleReactValidator(\n        //     {\n        //     validators: {\n        //         client_email_exists: {  // name the rule\n        //           message: 'This email already exists ',\n        //           rule: async (val, params, validator) => {\n        //                  return this.check_email(val)\n        //           }\n               \n        //         }\n        //       }            \n        // }\n        );\n    }\n\n    async check_email(value){\n        \n        if(this.props.type === 'client'){\n            // if()\n    await axios.post('https://api.sortika.com/client/check_mail',{\n        email:value\n    }).then((res)=>{\n        console.log(res.data.exists)\n        if(res.data.exists == 1){\n        return true\n        }\n        else{\n            return false\n        }\n    }).catch(error=>console.log(error))\n        }\n\n        else{\n\n            await axios.post('https://api.sortika.com/trader/check_mail',{\n                email:value\n            }).then((res)=>{\n                console.log(res.data.exists)\n                if(res.data.exists == 1){\n                return true\n                }else{\n                    return false\n                }\n            }).catch(error=>console.log(error))\n        }\n\n\n        // return exists;\n\n}\n\n    submitClientHandler =async(event) => {\n    \n        event.preventDefault()\n        // this.setState({loading:true})\n        await this.props.registerClientUser(this.state.username,this.state.email,this.state.password)\n       \n        \n      }\n\n      submitTraderHandler =async(event) => {\n        //   console.log('start......')\n        //   console.log(this.state.email)\n        event.preventDefault()\n        // this.setState({loading:true})\n        await this.props.registerTraderUser(this.state.username,this.state.email,this.state.password)\n       \n        \n      }\n\n\n      changeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      }\n  \nrender(){\n     \n    \n    return(\n        \n        <Modal open={this.props.open} onClose={this.props.close} center>\n    \n    <form className=\"signup\"  onSubmit={this.props.type === 'trader' ?this.submitTraderHandler : this.submitClientHandler}  noValidate>\n                <h3>Sign Up</h3>\n                <br/>\n            {this.props.err? <div className=\"alert alert-danger\" role=\"alert\">\n                        {this.props.err}\n                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                   </div>: null\n                   }\n                   {\n                       this.props.success_message ?\n                       <div className=\"alert alert-success\" role=\"alert\">\n                        {this.props.success_message}\n                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                   </div>: null\n                   }\n                   <br/>\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input \n                    name=\"username\"\n                    type=\"text\" \n                    className=\"form-control\" \n                    value={this.state.username}\n                onChange={this.changeHandler}\n                onBlur={()=>this.validator.showMessageFor('username')}\n                    placeholder=\"First name\" />\n                {this.validator.message('username', this.state.username, 'required|alpha_num_space|max:12|min:6')}\n\n                </div>\n\n              {this.props.type == 'trader'? \n              <div className=\"form-group\">\n                    <label> Your Myfx Email address</label>\n                    <input \n                    name=\"email\"\n                    type=\"email\"\n                     className=\"form-control\"\n                      placeholder=\"Enter email\"\n                      value={this.state.email}\n                onChange={this.changeHandler}\n                onBlur={()=>this.validator.showMessageFor('email')}\n                       />\n   {this.validator.message('email', this.state.email, 'required|email')}\n\n                </div>\n                 :\n                 <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input \n                    name=\"email\"\n                    type=\"email\"\n                     className=\"form-control\"\n                      placeholder=\"Enter email\"\n                      value={this.state.email}\n                onChange={this.changeHandler}\n                onBlur={()=>this.validator.showMessageFor('email')}\n                       />\n            {this.validator.message('email', this.state.email, 'required|email')}\n\n                </div>\n\n              }\n\n              {this.props.type == 'trader'\n              ? \n                <div className=\"form-group\">\n                    <label>Your Myfx Password</label>\n                    <input \n                    name=\"password\"\n                    type=\"password\" \n                    className=\"form-control\" \n                    value={this.state.password}\n                onChange={this.changeHandler}\n                onBlur={()=>this.validator.showMessageFor('password')}\n                    placeholder=\"Enter password\"\n                     />\n           {this.validator.message('password', this.state.password, 'required|max:12|min:6')}\n\n                </div>\n                :\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input \n                    name=\"password\"\n                    type=\"password\" \n                    className=\"form-control\" \n                    value={this.state.password}\n                onChange={this.changeHandler}\n                onBlur={()=>this.validator.showMessageFor('password')}\n                    placeholder=\"Enter password\"\n                     />\n          {this.validator.message('password', this.state.password, 'required|max:12|min:6')}\n\n                </div>\n              }\n\n                {\n                    this.props.fetching ?\n\n                <button className=\"btn btn-primary btn-block\" type=\"button\" disabled>\n                Processing....\n                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                    \n                </button>\n                :\n                    this.validator.allValid() ?\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\n                :\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled>Sign Up</button>\n                }\n                <p className=\"forgot-password text-right\">\n                    Already registered <a href=\"#\" onClick={this.props.link}>sign in?</a>\n                </p>\n            </form>\n            \n</Modal>\n\n             \n\n    )\n}\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n      fetching:state.Auth.isFetching,\n      err:state.Auth.errorMessage,\n      success_message:state.Auth.successMessage\n    }\n}\nconst mapDispatchToProps={\n  \n      registerClientUser,\n      registerTraderUser\n    \n  \n}\n\nexport default connect (mapStateToProps,mapDispatchToProps)(SignupModal)"]},"metadata":{},"sourceType":"module"}